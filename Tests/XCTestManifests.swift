#if !canImport(ObjectiveC)
import XCTest

extension BerTlvParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BerTlvParserTests = [
        ("test_calculatingSize", test_calculatingSize),
        ("test_lengthOffset", test_lengthOffset),
        ("test_makingPayloadSize", test_makingPayloadSize),
        ("test_parseMultipleLongTLV", test_parseMultipleLongTLV),
        ("test_parseMultipleTLV", test_parseMultipleTLV),
        ("test_parseMultipleTLVGluedWithZeroes", test_parseMultipleTLVGluedWithZeroes),
        ("test_parseOneTLV", test_parseOneTLV),
        ("test_serialize127ByteTLV", test_serialize127ByteTLV),
        ("test_serialize128ByteTLV", test_serialize128ByteTLV),
        ("test_serialize65535ByteTLV", test_serialize65535ByteTLV),
        ("test_serializeOneByteTLV", test_serializeOneByteTLV),
        ("test_serializeTwoByteTLV", test_serializeTwoByteTLV),
    ]
}

extension DataToHexStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DataToHexStringTests = [
        ("test_data2hexString", test_data2hexString),
    ]
}

extension DataToIntTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DataToIntTests = [
        ("test_bigNumberDataToInt", test_bigNumberDataToInt),
        ("test_hugeNumberDataToInt", test_hugeNumberDataToInt),
        ("test_mediumNumberDataToInt", test_mediumNumberDataToInt),
        ("test_smallNumberDataToInt", test_smallNumberDataToInt),
    ]
}

extension HexStringToBytesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HexStringToBytesTests = [
        ("test_byteFromInvalidCharacter", test_byteFromInvalidCharacter),
        ("test_bytesFromDecimalHexString", test_bytesFromDecimalHexString),
        ("test_bytesFromlowercasedHexString", test_bytesFromlowercasedHexString),
        ("test_bytesFromUppercasedHexString", test_bytesFromUppercasedHexString),
    ]
}

extension IntToHexTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IntToHexTests = [
        ("test_convertingBigNumbers", test_convertingBigNumbers),
        ("test_convertingMediumNumbers", test_convertingMediumNumbers),
        ("test_convertingSmallNumbers", test_convertingSmallNumbers),
    ]
}

extension SimpleTlvParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SimpleTlvParserTests = [
        ("test_calculatingSize", test_calculatingSize),
        ("test_makingPayloadSize", test_makingPayloadSize),
        ("test_parseMultipleTLV", test_parseMultipleTLV),
        ("test_parseOneTLV", test_parseOneTLV),
        ("test_serialize127ByteTLV", test_serialize127ByteTLV),
        ("test_serializeLongByteTLV", test_serializeLongByteTLV),
        ("test_serializeOneByteTLV", test_serializeOneByteTLV),
        ("test_serializeTwoByteTLV", test_serializeTwoByteTLV),
    ]
}

extension UInt8ToHexTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UInt8ToHexTests = [
        ("test_convertingOneDigitNumbers", test_convertingOneDigitNumbers),
        ("test_convertingTwoDigitNumbers", test_convertingTwoDigitNumbers),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BerTlvParserTests.__allTests__BerTlvParserTests),
        testCase(DataToHexStringTests.__allTests__DataToHexStringTests),
        testCase(DataToIntTests.__allTests__DataToIntTests),
        testCase(HexStringToBytesTests.__allTests__HexStringToBytesTests),
        testCase(IntToHexTests.__allTests__IntToHexTests),
        testCase(SimpleTlvParserTests.__allTests__SimpleTlvParserTests),
        testCase(UInt8ToHexTests.__allTests__UInt8ToHexTests),
    ]
}
#endif
